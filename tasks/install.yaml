---
# Install tasks file for ansible-role-nnt-agent

- name: "Test if tripwire_installed boolean variable is set correctly"
  ansible.builtin.assert:
    that:
      - tripwire_installed is defined
      - tripwire_installed is boolean
      - not tripwire_installed | bool
    quiet: yes
  when:
    - tripwire_installed is defined

- name: "Test if install boolean variable is set correctly"
  ansible.builtin.assert:
    that:
      - install is defined
      - install is boolean
    quiet: yes

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/nnt/"
    state: directory

- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/nnt/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/nnt/"
    validate_certs: no
    mode: '0770'
  when:
    - not package.stat.exists | bool

- name: "Extract Debian packages from .ZIP file (apt)"
  ansible.builtin.unarchive:
    src: "/root/software/nnt/{{ package_name }}"
    dest: "/root/software/nnt/"
    remote_src: yes
  when:
    #- package_name.find(".zip") == -1
    - ansible_facts['pkg_mgr'] == 'apt'

- name: "Install package (yum)"
  ansible.builtin.yum:
    name: "/root/software/nnt/{{ package_name }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] == 'yum'

- name: "Install package (dnf)"
  ansible.builtin.dnf:
    name: "/root/software/nnt/{{ package_name }}"
    state: present
    disable_gpg_check: yes
  when:
    - ansible_facts['pkg_mgr'] == 'dnf'

- name: "Install package (apt)"
  ansible.builtin.apt:
    deb: "/root/software/nnt/{{ item }}"
    state: present
  with_items:
    - "{{ packages }}"
  when:
    - ansible_facts['pkg_mgr'] == 'apt'

#- name: "Update NNT Config Script (Proxy Settings - RedHat)"
#  ansible.builtin.replace:
#    path: "/opt/nnt/gen7agentcore/{{ config_script }}"
#    regexp: "{{ item.regexp }}"
#    replace: "{{ item.replace }}"
#  with_items:
#    - regexp: '^..D_USE_PROXY=no'
#      replace: '  D_USE_PROXY={{ use_proxy }}'
#    - regexp: '^..D_PROXY_PROTOCOL='
#      replace: '  D_PROXY_PROTOCOL={{ proxy_protocol }}'
#    - regexp: '^..D_PROXY_SERVER='
#      replace: '  D_PROXY_SERVER={{ proxy_host }}'
#  when:
#    - proxy | bool
#    - ansible_facts['os_family'] == 'RedHat'

#- name: "Update NNT Config Script (Proxy Settings - Debian)"
#  ansible.builtin.replace:
#    path: "/opt/nnt/gen7agent/configure-gen7agent.sh"
#    regexp: "{{ item.regexp }}"
#    replace: "{{ item.replace }}"
#  with_items:
#    - regexp: '^..D_USE_PROXY=no'
#      replace: '  D_USE_PROXY={{ use_proxy }}'
#    - regexp: '^..D_PROXY_PROTOCOL='
#      replace: '  D_PROXY_PROTOCOL={{ proxy_protocol }}'
#    - regexp: '^..D_PROXY_SERVER='
#      replace: '  D_PROXY_SERVER={{ proxy_host }}'
#  when:
#    - proxy | bool
#    - ansible_facts['os_family'] == 'Debian'

- name: "Set Facts for NNT configuration (RedHat)"
  ansible.builtin.set_fact:
    nnt_install: /opt/nnt/gen7agentcore
    nnt_bin: /opt/nnt/gen7agentcore/bin
    config_script: configure-gen7agentcore.sh
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: "Set Facts for NNT configuration (Debian)"
  ansible.builtin.set_fact:
    nnt_install: /opt/nnt/gen7agent
    nnt_bin: /opt/nnt/gen7agent/bin
    config_script: /opt/nnt/gen7agent/configure-gen7agent.sh
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: "Register Agent with Hub Host (RedHat)"
  ansible.builtin.shell:
    cmd: "{{ config_script }} -D_HUB_HOST={{ hub_url }} -D_AGENT_USER={{ agent_username }} -D_AGENT_PWD={{ agent_password }}"
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - not proxy | bool

- name: "Register Agent with Hub Host (RedHat - Proxy)"
  ansible.builtin.shell:
    cmd: |
      {{ hub_url }} \
      {{ agent_username }} \
      {{ agent_password }} \
      \
      \
      \
      \
      {{ proxy_protocol }} \
      {{ proxy_host }}:{{ proxy_port }}
  args:
    chdir: "{{ nnt_install }}"
    executable: "./{{ config_script }}"
    #stdin_add_newline: false
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - proxy | bool

- name: "Register Agent with Hub Host (Debian)"
  ansible.builtin.shell:
    cmd: "/opt/nnt/gen7agent/configure-gen7agent.sh {{ hub_url }} {{ agent_username }} {{ agent_password }}"
  when:
    - ansible_facts['os_family'] == 'Debian'
    - not proxy | bool

- name: "Register Agent with Hub Host (Debian - Proxy)"
  ansible.builtin.shell:
    cmd: "/opt/nnt/gen7agent/configure-gen7agent.sh {{ hub_url }} {{ agent_username }} {{ agent_password }} /opt/nnt/gen7agent/bin    {{ use_proxy }} {{ proxy_protocol }} {{ proxy_host }}:{{ proxy_port }}"
  when:
    - ansible_facts['os_family'] == 'Debian'
    - proxy | bool