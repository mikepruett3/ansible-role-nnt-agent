---
# Lookup tasks file for ansible-role-nnt-agent

- name: "Check for Tripwire Configuration directory"
  ansible.builtin.stat:
    path: /etc/tripwire/
  register: result
  ignore_errors: true

- name: "Set Facts for Tripwire Configuration directory"
  ansible.builtin.set_fact:
    tripwire_installed: true
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false

- name: "Check for NNT install directory (RedHat)"
  ansible.builtin.stat:
    path: /opt/nnt/gen7agentcore
  register: result
  ignore_errors: true
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: "Set Facts for NNT install directory (RedHat)"
  ansible.builtin.set_fact:
    nnt_install: /opt/nnt/gen7agentcore
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false
    - ansible_facts['os_family'] == 'RedHat'

- name: "Check for NNT install directory (Debian)"
  ansible.builtin.stat:
    path: /opt/nnt/gen7agent
  register: result
  ignore_errors: true
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: "Set Facts for NNT install directory (Debian)"
  ansible.builtin.set_fact:
    nnt_install: /opt/nnt/gen7agent
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false
    - ansible_facts['os_family'] == 'Debian'

- name: "Set Facts for Install variable"
  ansible.builtin.set_fact:
    install: true
  when:
    - nnt_install is not defined

- name: "Check for NNT config directory (RedHat)"
  ansible.builtin.stat:
    path: /var/nnt/gen7agent.app.netcore
  register: result
  ignore_errors: true
  when:
    - ansible_facts['os_family'] == 'RedHat'

- name: "Set Facts for NNT config directory (RedHat)"
  ansible.builtin.set_fact:
    nnt_config: /var/nnt/gen7agent.app.netcore
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false
    - ansible_facts['os_family'] == 'RedHat'

- name: "Check for NNT config directory (Debian)"
  ansible.builtin.stat:
    path: /var/nnt/gen7agent.service
  register: result
  ignore_errors: true
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: "Set Facts for NNT config directory (Debian)"
  ansible.builtin.set_fact:
    nnt_config: /var/nnt/gen7agent.service
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false
    - ansible_facts['os_family'] == 'Debian'

- name: "Check for NNT HubDetails XML File"
  ansible.builtin.stat:
    path: "{{ nnt_config }}/HubDetails.xml"
  register: result
  when:
    - nnt_config_dir is defined

- name: "Set Facts for NNT HubDetails XML File"
  ansible.builtin.set_fact:
    hubdetails: "{{ nnt_config }}/HubDetails.xml"
  when:
    - nnt_config_dir is defined
    - result.stat.exists
    - result.failed is false

- name: "Check for NNT Version TXT File"
  ansible.builtin.stat:
    path: "{{ nnt_config }}/version.txt"
  register: result
  when:
    - nnt_config_dir is defined

- name: "Set Facts for NNT Version TXT File"
  ansible.builtin.set_fact:
    version: "{{ nnt_config }}/version.txt"
  when:
    - nnt_config_dir is defined
    - result.stat.exists
    - result.failed is false

- name: "Read from NNT Version TXT File"
  ansible.builtin.shell:
    cmd: "cat {{ version }}"
  register: result
  when:
    - version is defined

- name: "Set Facts for NNT Change Tracker Agent Installed Version"
  ansible.builtin.set_fact:
    installed_version: "{{ result.stdout }}"
  when:
    - result is defined
    - result.failed is false

- name: "Set Facts for Upgrade variable"
  ansible.builtin.set_fact:
    upgrade: true
  when:
    - installed_version is defined
    - installed_version != package_version